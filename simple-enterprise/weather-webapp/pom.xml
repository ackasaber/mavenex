<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>mavenbook.enterprise</groupId>
        <artifactId>simple-enterprise</artifactId>
        <version>1.0</version>
    </parent>
    
    <artifactId>weather-webapp</artifactId>
    <packaging>war</packaging>
    
    <name>Weather Web App</name>
    
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>weather-service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <!-- Spring MVC dropped support for Apache Velocity,
             so let's use Apache FreeMarker instead. -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>
        <!-- Spring own classes to register FreeMarker as the view templating
             engine in Spring MVC. -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
    </dependencies>
    
    <!-- Running instructions:
         1. Create a dedicated working folder for the app.
         2. Create the database and tables by running
            mvn -f PATH-TO-WEATHER-SERVICE/pom.xml sql:execute
         3. Launch the webapp from this folder via
            mvn -f PATH-TO-WEATHER-WEBAPP/pom.xml jetty:run
       
         The working folder can be shared between the webapp and the CLI. -->

    <build>
        <finalName>weather-webapp</finalName>
        <plugins>
            <!-- Jetty Maven plugin, deploy the app via jetty:run. -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>